# 應用名稱
spring.application.name=welcome-service-8080

# 應用端口
server.port=8080
#---------------------------------------------------------------------------------2=47 A5
# 使用 ip 地址註冊
eureka.instance.prefer-ip-address=true

# 設定註冊中心的 ip 位置
eureka.instance.ip-address=192.168.56.1

# 註冊中心位置
eureka.client.serviceUrl.defaultZone=http://${eureka.instance.ip-address}:8761/eureka
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka    #-----------------------2=23 A1
#-----------------------------------------------------------------------2:38
# 心跳間隔(秒)
# 多久會向 Eureka 服務發送心跳. 例如: 每 30 秒發送心挑乙次
eureka.instance.lease-renewal-interval-in-seconds=30

# 過期時間(秒)
# 如果在期限內(例如:90秒) Erueka 沒有收到心跳回應, 則本服務就是為下線
eureka.instance.lease-expiration-duration-in-seconds=90
#---------------------------------------------------------------------------
# 顯示在註冊中心的 id 名稱
eureka.instance.instance-id=${spring.application.name}
#---------------------------------------------------------------2:19
# 設定端點的基本路徑
management.endpoints.web.base-path=/actuator

# 要公開資料的端點
# 端點是一個 RESTful API，用於管理和監控應用程序。它們是由Spring Boot Actuator模塊提供的。
# health, info, env, beans, configprops, loggers, metrics, trace, threaddump, heapdump
# health: 用於檢查應用程序的健康狀態, 例如: http://localhost:8080/actuator/health
# info: 用於檢索應用程序的信息, 例如: http://localhost:8080/actuator/info
# env: 用於檢索應用程序的環境變量, 例如: http://localhost:8080/actuator/env
# beans: 用於檢索應用程序的所有bean, 例如: http://localhost:8080/actuator/beans
# configprops: 用於檢索應用程序的所有配置, 例如: http://localhost:8080/actuator/configprops
# loggers: 用於檢索應用程序的日誌配置, 例如: http://localhost:8080/actuator/loggers
# metrics: 用於檢索應用程序的指標, 例如: http://localhost:8080/actuator/metrics
# trace: 用於檢索應用程序的請求跟踪, 例如: http://localhost:8080/actuator/trace
# threaddump: 用於檢索應用程序的線程信息, 例如: http://localhost:8080/actuator/threaddump
# heapdump: 用於檢索應用程序的堆信息, 例如: http://localhost:8080/actuator/heapdump
management.endpoints.web.exposure.include=*

# 顯示健康狀態的詳細信息
management.endpoint.health.show-details=always